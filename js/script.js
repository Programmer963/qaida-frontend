'use strict';

/**
 * navbar toggle
 */

const overlay = document.querySelector("[data-overlay]");
const navOpenBtn = document.querySelector("[data-nav-open-btn]");
const navbar = document.querySelector("[data-navbar]");
const navCloseBtn = document.querySelector("[data-nav-close-btn]");
const navLinks = document.querySelectorAll("[data-nav-link]");

const navElemArr = [navOpenBtn, navCloseBtn, overlay];

const navToggleEvent = function (elem) {
  for (let i = 0; i < elem.length; i++) {
    elem[i].addEventListener("click", function () {
      navbar.classList.toggle("active");
      overlay.classList.toggle("active");
    });
  }
}

navToggleEvent(navElemArr);
navToggleEvent(navLinks);



/**
 * header sticky & go to top
 */

const header = document.querySelector("[data-header]");
const goTopBtn = document.querySelector("[data-go-top]");

window.addEventListener("scroll", function () {

  if (window.scrollY >= 200) {
    header.classList.add("active");
    goTopBtn.classList.add("active");
  } else {
    header.classList.remove("active");
    goTopBtn.classList.remove("active");
  }

});
/**
 * idea generator
 */

const ideas = [
  "‚òï –ó–∞–π–¥–∏ –≤ —É—é—Ç–Ω—É—é –∫–æ—Ñ–µ–π–Ω—é –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏.",
  "üå≥ –ü—Ä–æ–≥—É–ª—è–π—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–º –ø–∞—Ä–∫–µ.",
  "üé¨ –°—Ö–æ–¥–∏ –≤ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä ‚Äî –µ—Å—Ç—å —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–µ–º—å–µ—Ä—ã.",
  "üçî –ü–æ–ø—Ä–æ–±—É–π –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ —Å –±—É—Ä–≥–µ—Ä–∞–º–∏.",
  "üé≥ –°—ã–≥—Ä–∞–π –≤ –±–æ—É–ª–∏–Ω–≥ —Å –¥—Ä—É–∑—å—è–º–∏.",
  "üéÆ –ü–æ—Å–µ—Ç–∏ VR-–∫–ª—É–± –∏–ª–∏ –∫–≤–µ—Å—Ç-–∫–æ–º–Ω–∞—Ç—É.",
  "üçï –£—Å—Ç—Ä–æ–π –≤–µ—á–µ—Ä –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫—É—Ö–Ω–∏.",
  "üì∑ –°—Ö–æ–¥–∏ –Ω–∞ —Å–º–æ—Ç—Ä–æ–≤—É—é –ø–ª–æ—â–∞–¥–∫—É.",
  "üö¥‚Äç‚ôÇÔ∏è –ü—Ä–æ–∫–∞—Ç–∏—Å—å –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ –∏–ª–∏ –≤–µ–ª–∏–∫–µ.",
  "üìö –ü—Ä–æ–≤–µ–¥–∏ –≤—Ä–µ–º—è –≤ –∫–Ω–∏–∂–Ω–æ–º –∫–∞—Ñ–µ."
];

const generateBtn = document.getElementById("generateBtn");
const ideaResult = document.getElementById("ideaResult");

if (generateBtn && ideaResult) {
  generateBtn.addEventListener("click", (e) => {
    e.preventDefault();
    const randomIdea = ideas[Math.floor(Math.random() * ideas.length)];
    ideaResult.textContent = randomIdea;
  });
}
const ideasData = {
  cafe: {
    low: ["‚òï –ó–∞–±–µ–≥–∏ –≤ –º–µ—Å—Ç–Ω—É—é –∫–æ—Ñ–µ–π–Ω—é —Å take-away", "üç© –ü–æ–ø—Ä–æ–±—É–π —É–ª–∏—á–Ω—É—é –≤—ã–ø–µ—á–∫—É –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏"],
    medium: ["üç∞ –ü–æ—Å–µ—Ç–∏ –∫–∞—Ñ–µ —Å –¥–µ—Å–µ—Ä—Ç–∞–º–∏", "üçú –ü–æ–æ–±–µ–¥–∞–π –≤ —É—é—Ç–Ω–æ–π –ª–∞–ø—à–∏—á–Ω–æ–π"],
    high: ["ü•Ç –£—Å—Ç—Ä–æ–π —É–∂–∏–Ω –≤ —Å—Ç–∏–ª—å–Ω–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ", "üç£ –°—Ö–æ–¥–∏ –≤ —Å—É—à–∏-–±–∞—Ä —Å –ø–∞–Ω–æ—Ä–∞–º–æ–π"],
  },
  walk: {
    low: ["üå≥ –ü—Ä–æ–≥—É–ª—è–π—Å—è –≤ –ø–∞—Ä–∫–µ —Ä—è–¥–æ–º", "üö∂ –û–±–æ–π–¥–∏ —Ä–∞–π–æ–Ω, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ –∑–Ω–∞–µ—à—å"],
    medium: ["üì∑ –°—Ñ–æ—Ç–∫–∞–π—Å—è –Ω–∞ —Å–º–æ—Ç—Ä–æ–≤–æ–π", "üõç –ü—Ä–æ–π–¥–∏—Å—å –ø–æ –º–µ—Å—Ç–Ω—ã–º —è—Ä–º–∞—Ä–∫–∞–º"],
    high: ["üöó –°—ä–µ–∑–¥–∏ –Ω–∞ –Ω–∞–±–µ—Ä–µ–∂–Ω—É—é –∏–ª–∏ –∑–∞ –≥–æ—Ä–æ–¥", "üóª –ü–æ–¥–Ω–∏–º–∏—Å—å –Ω–∞ —Ö–æ–ª–º —Å –≤–∏–¥–æ–º"],
  },
  cinema: {
    low: ["üìº –í–∫–ª—é—á–∏ –∫–ª–∞—Å—Å–∏–∫—É –¥–æ–º–∞", "üì∫ –ù–∞–π–¥–∏ –æ—Ç–∫—Ä—ã—Ç—ã–π –ø–æ–∫–∞–∑ –Ω–∞ —É–ª–∏—Ü–µ"],
    medium: ["üé¨ –°—Ö–æ–¥–∏ –≤ –±–ª–∏–∂–∞–π—à–∏–π –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä", "üéû –ü–æ—Å–º–æ—Ç—Ä–∏ –∞—Ä—Ç—Ö–∞—É—Å –≤ –º–∞–ª–µ–Ω—å–∫–æ–º –∑–∞–ª–µ"],
    high: ["üõã –°–º–æ—Ç—Ä–∏ –∫–∏–Ω–æ –≤ VIP-–∑–∞–ª–µ", "üçø –ò–¥–∏ –≤ IMAX –∏–ª–∏ Dolby Cinema"],
  },
  entertainment: {
    low: ["üé≤ –ü–æ–∏–≥—Ä–∞–π –≤ –Ω–∞—Å—Ç–æ–ª–∫–∏ –≤ –∞–Ω—Ç–∏–∫–∞—Ñ–µ", "üéØ –ü—Ä–æ–≤–µ–¥–∏ –≤–µ—á–µ—Ä –≤ –±–∞—Ä–µ —Å –¥–∞—Ä—Ç—Å–æ–º"],
    medium: ["üéÆ –ó–∞–≥–ª—è–Ω–∏ –≤ VR-–∫–ª—É–±", "üé≥ –ò–¥–∏ –≤ –±–æ—É–ª–∏–Ω–≥ –∏–ª–∏ –±–∏–ª—å—è—Ä–¥"],
    high: ["üïµÔ∏è –ü—Ä–æ–π–¥–∏ –∫–≤–µ—Å—Ç", "üé° –ü–æ—Å–µ—Ç–∏ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã –≤ –ø–∞—Ä–∫–µ"],
  },
};

document.getElementById("generateBtn").addEventListener("click", function () {
  const category = document.getElementById("category").value;
  const budget = document.getElementById("budget").value;
  const output = document.getElementById("ideaResult");

  const options = ideasData[category]?.[budget];

  if (options && options.length > 0) {
    const idea = options[Math.floor(Math.random() * options.length)];
    output.textContent = idea;
  } else {
    output.textContent = "üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ —ç—Ç–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º";
  }
});

